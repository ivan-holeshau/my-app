{"version":3,"sources":["components/Panel/itemCard/Card.js","components/Menu/addMenu/AddMenu.js","components/Menu/searchMenu/search.js","components/Menu/Menu.js","components/Panel/Panel.js"],"names":["Card","props","state","name","price","nextProps","nextState","console","log","error","info","event","target","value","this","setState","style","border","width","display","justifyContent","flexDirection","alignItems","margin","className","type","placeholder","onChange","handlerOnChange","bind","onClick","onDelete","index","prevState","Component","Radium","AddMenu","onChangeHandler","AddContect","Consumer","objContect","add","Search","search","onChangeHandle","Menu","React","createContext","Panel","list","splice","Number","parseInt","item","push","alert","Provider","addListHandler","ev","onChangeHandleSearch","filter","indexOf","map","key","el","onDeleteHandler"],"mappings":"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","file":"static/js/4.e519ef7e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\nimport Radium from 'radium'\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.name,\n            price: props.price,\n        }\n    }\n\n    //момент изменения\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate ', nextProps, nextState)\n        return true;\n        //optimization\n    }  //try\n\n    // //момент изменения когда точно знаем что будет меняться меняем state this\n    // componentWillUpdate(nextProps, nextState) {\n    //     console.log('componentWillUpdate ' , nextProps ,  nextState)\n    // }\n\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        // запрещено доступ к стате и this\n        return {\n            // можно венруть стейт и они смержиться\n        }\n    }\n    // позволяет получить не измененное дом дерево до обновления\n    //  save sctrol example\n    getSnapshotBeforeUpdate() {\n        console.log('getSnapshotBeforeUpdate')\n    }\n\n\n    //уже после componentWillUpdate\n    //компонент обновлен\n    componentDidUpdate() {\n        console.log('componentDidUpdate ')\n    }\n    // обновляем стате для рендера ногого ui\n    // static getDerivedStateFromError(error) {\n    //     return hasError : true\n    // }\n    // при удалении\n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n    }\n\n    // this.setState((preState) => count = 2 )\n\n    componentDidCatch(error, info) { }\n\n    handlerOnChange(event) {\n        const name = event.target.value ? event.target.value : '';\n        this.setState({ name: name })\n    }\n\n    render() {\n        const style = {\n            border: '1px solid #ccc',\n            width: '200px',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            alignItems: 'center',\n            margin: '5px',\n            ':hover': {\n                border: '1px solid black',\n            }\n        }\n\n        return (\n            <div style={style}>\n                <p className='title'>{this.state.name}</p>\n                <p className='title'>{this.state.price}$</p>\n                <p className='title'><input type='text' placeholder='marka' value={this.state.name} onChange={this.handlerOnChange.bind(this)}></input></p>\n                <p className='title'><button onClick={this.props.onDelete(this.props.index)}>delete</button> </p>\n            </div>\n        )\n    }\n}\n\nexport default Radium(Card);","import React, { Component } from 'react'\nimport './style.css'\nimport { AddContect } from '../../Panel/Panel'\nclass AddMenu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            price: ''\n        }\n        this.onChangeHandler = this.onChangeHandler.bind(this)\n    }\n\n    onChangeHandler(event) {\n        const name = event.target.name;\n        this.setState({ [`${name}`]: event.target.value })\n    }\n\n    render() {\n        return (\n            <div className='addMenu'>\n                <input name='name' value={this.state.name} type='text' onChange={this.onChangeHandler} placeholder='name car'></input>\n                <input name='price' value={this.state.price} type='text' onChange={this.onChangeHandler} placeholder='price'></input>\n                <AddContect.Consumer>\n                    {(objContect) => <button onClick={objContect.add(this)}>add</button>}\n                </AddContect.Consumer>\n            </div>\n        )\n    }\n}\n\nexport default AddMenu;","import React, { Component } from 'react'\nimport { AddContect } from '../../Panel/Panel'\n\nclass Search extends Component {\n\n    render() {\n        return (\n            <div>\n                <AddContect.Consumer >\n                    {(search => <input type='text' placeholder='search' value={search.search} onChange={search.onChangeHandle}></input>)}\n                </AddContect.Consumer>\n            </div>\n        )\n    }\n}\nexport default Search;","import React, { Component } from 'react'\nimport AddMenu from './addMenu/AddMenu'\nimport Search from './searchMenu/search'\nimport PropTypes from 'prop-types';\nclass Menu extends Component {\n    render() {\n        return (\n            <div>\n                <AddMenu />\n                <Search />\n            </div>\n        )\n    }\n}\n\nMenu.propTypes = {\n    add: PropTypes.func,\n    onChangeHandle: PropTypes.func,\n\n}\n\nexport default Menu;","import React, { Component } from 'react'\nimport Card from './itemCard/Card'\nimport './style.css'\nimport Menu from '../Menu/Menu';\nexport const AddContect = React.createContext({ search: '', add: {} })\n\n\nclass Panel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: props.list,\n            search: ''\n        }\n\n    }\n\n    onDeleteHandler(index) {\n        const list = this.state.list;\n        let removed = list.splice(index, 1);\n        this.setState({ list: list })\n    }\n\n    addListHandler(event) {\n        if( Number.parseInt(event.state.price)){\n        console.log(event)\n        const item = { name: event.state.name ? event.state.name : 'no name', price: event.state.price };\n        const list = this.state.list;\n        list.push(item);\n        this.setState({ list })\n        event.state.name = \"\";\n        event.state.price = \"\";}\n        else {\n            alert('price is not number')\n        }\n    }\n\n    onChangeHandle(event) {\n        this.setState({ search: event.target.value })\n    }\n\n    onChangeHandleSearch(event) { \n       this.setState({ search: event.target.value })\n    }\n\n    render() {\n        const style = {\n            border: '1px solid black',\n            width: '70px',\n            height: '30px'\n        }\n\n        return (\n\n            <div className='panel'>\n                <AddContect.Provider value={{\n                    search: this.state.search,\n                    add: (name, price) => this.addListHandler.bind(this, name, price),\n                    onChangeHandle: (ev) => this.onChangeHandleSearch.bind(this, ev)()\n                }}>\n                    <Menu />\n                    {this.state.list.filter((item) => {\n                        return item.name.indexOf(this.state.search) > -1 || item.price.indexOf(this.state.search) > -1\n\n                    }).map((item, index) => {\n                        return <Card key={item.name + item.price + index} name={item.name} price={item.price} onDelete={((el) => this.onDeleteHandler.bind(this, el))} index={index} />\n                    })}\n                </AddContect.Provider>\n            </div>\n\n        )\n    }\n}\n\nexport default Panel;"],"sourceRoot":""}